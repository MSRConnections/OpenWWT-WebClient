var assert = chai.assert;

var FITS_FILE_BASE64 = 'U0lNUExFICA9ICAgICAgICAgICAgICAgICAgICBUIC8gY29uZm9ybXMgdG8gRklUUyBzdGFuZGFyZCAgICAgICAgICAgICAgICAgICAgICBCSVRQSVggID0gICAgICAgICAgICAgICAgICAtNjQgLyBhcnJheSBkYXRhIHR5cGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5BWElTICAgPSAgICAgICAgICAgICAgICAgICAgMiAvIG51bWJlciBvZiBhcnJheSBkaW1lbnNpb25zICAgICAgICAgICAgICAgICAgICAgTkFYSVMxICA9ICAgICAgICAgICAgICAgICAgICAxICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOQVhJUzIgID0gICAgICAgICAgICAgICAgICAgIDEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdDU0FYRVMgPSAgICAgICAgICAgICAgICAgICAgMiAvIE51bWJlciBvZiBjb29yZGluYXRlIGF4ZXMgICAgICAgICAgICAgICAgICAgICAgQ1JQSVgxICA9ICAgICAgICAgICAgICAgICAgMC4wIC8gUGl4ZWwgY29vcmRpbmF0ZSBvZiByZWZlcmVuY2UgcG9pbnQgICAgICAgICAgICBDUlBJWDIgID0gICAgICAgICAgICAgICAgICAwLjAgLyBQaXhlbCBjb29yZGluYXRlIG9mIHJlZmVyZW5jZSBwb2ludCAgICAgICAgICAgIENERUxUMSAgPSAgICAgICAgICAgICAgICAgIDEuMCAvIFtkZWddIENvb3JkaW5hdGUgaW5jcmVtZW50IGF0IHJlZmVyZW5jZSBwb2ludCAgQ0RFTFQyICA9ICAgICAgICAgICAgICAgICAgMS4wIC8gW2RlZ10gQ29vcmRpbmF0ZSBpbmNyZW1lbnQgYXQgcmVmZXJlbmNlIHBvaW50ICBDVU5JVDEgID0gJ2RlZycgICAgICAgICAgICAgICAgLyBVbml0cyBvZiBjb29yZGluYXRlIGluY3JlbWVudCBhbmQgdmFsdWUgICAgICAgIENVTklUMiAgPSAnZGVnJyAgICAgICAgICAgICAgICAvIFVuaXRzIG9mIGNvb3JkaW5hdGUgaW5jcmVtZW50IGFuZCB2YWx1ZSAgICAgICAgQ1RZUEUxICA9ICdSQS0tLVRBTicgICAgICAgICAgIC8gUmlnaHQgYXNjZW5zaW9uLCBnbm9tb25pYyBwcm9qZWN0aW9uICAgICAgICAgICBDVFlQRTIgID0gJ0RFQy0tVEFOJyAgICAgICAgICAgLyBEZWNsaW5hdGlvbiwgZ25vbW9uaWMgcHJvamVjdGlvbiAgICAgICAgICAgICAgIENSVkFMMSAgPSAgICAgICAgICAgICAgICAgIDAuMCAvIFtkZWddIENvb3JkaW5hdGUgdmFsdWUgYXQgcmVmZXJlbmNlIHBvaW50ICAgICAgQ1JWQUwyICA9ICAgICAgICAgICAgICAgICAgMC4wIC8gW2RlZ10gQ29vcmRpbmF0ZSB2YWx1ZSBhdCByZWZlcmVuY2UgcG9pbnQgICAgICBMT05QT0xFID0gICAgICAgICAgICAgICAgMTgwLjAgLyBbZGVnXSBOYXRpdmUgbG9uZ2l0dWRlIG9mIGNlbGVzdGlhbCBwb2xlICAgICAgIExBVFBPTEUgPSAgICAgICAgICAgICAgICAgIDAuMCAvIFtkZWddIE5hdGl2ZSBsYXRpdHVkZSBvZiBjZWxlc3RpYWwgcG9sZSAgICAgICAgUkFERVNZUyA9ICdJQ1JTJyAgICAgICAgICAgICAgIC8gRXF1YXRvcmlhbCBjb29yZGluYXRlIHN5c3RlbSAgICAgICAgICAgICAgICAgICBFTkQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg

class FakePrepDevice {
    createTexture() {}
    bindTexture() {}
    texParameteri() {}
    texImage2D() {}
    generateMipmap() {}
  }

describe('FitsImage', function() {

  it('should include colormap name in XML serialization', function(done) {

    // Mock the WebGL prepDevice
    wwtlib.Tile.prepDevice = new FakePrepDevice();

    var fits_blob = new Blob([atob(FITS_FILE_BASE64)])

    var layer = new wwtlib.ImageSetLayer();
    var img = new wwtlib.FitsImage(null, fits_blob, function(wcsImage) {

      // Set up image layer with a FITS image
      var width = ss.truncate(wcsImage.get_sizeX());
      var height = ss.truncate(wcsImage.get_sizeY());
      var imageset = wwtlib.Imageset.create(wcsImage.get_description(), wwtlib.Util.getHashCode('test.fits').toString(), 2, 3, 5, wwtlib.Util.getHashCode('test.fits'), 0, 0, 256, wcsImage.get_scaleY(), '.tif', wcsImage.get_scaleX() > 0, '', wcsImage.get_centerX(), wcsImage.get_centerY(), wcsImage.get_rotation(), false, '', false, false, 1, wcsImage.get_referenceX(), wcsImage.get_referenceY(), wcsImage.get_copyright(), wcsImage.get_creditsUrl(), '', '', 0, '');
      imageset.set_wcsImage(wcsImage);
      layer.set_imageSet(imageset);

      // Set the colormap
      
      layer.set_colorMapperName('viridis')

      // Export to XML
      var xmlWriter = new wwtlib.XmlTextWriter();
      layer.saveToXml(xmlWriter);

      // Now use a standard XML parser to load and check for colormap attribute
      parser = new DOMParser();
      xmlDoc = parser.parseFromString(xmlWriter.body, "text/xml");
      layer_xml = xmlDoc.getElementsByTagName('Layer')[0]

      assert.equal(layer_xml.getAttribute('ColorMapperName'), "viridis");

      // Now check that when loading back we get the same as the initial values
      var new_layer = new wwtlib.ImageSetLayer()
      new_layer.initializeFromXml(layer_xml);
      assert.equal(new_layer.colorMapperName, "viridis");

      done();

    });

  });

});
